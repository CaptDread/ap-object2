{"version":3,"sources":["error.js"],"names":["ErrorHandler","document","console","globalErrors","evt","errMessage","Object","errEl","invalidElement","errors","json"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAAMA,Y;AAGF,WAAA,YAAA,GAAc;AAAA,IAAA,eAAA,CAAA,IAAA,EAAA,YAAA,CAAA;;AAAA,IAAA,eAAA,CAAA,IAAA,EAAA,QAAA,EAFL,EAEK,CAAA;;AACV,SAAA,KAAA;AACH;;;;4BAEM;AACHC,MAAAA,QAAQ,CAARA,gBAAAA,CAAAA,kBAAAA,EAA8C,UAAA,GAAA,EAAS;AACnDC,QAAAA,OAAO,CAAPA,GAAAA,CAAAA,oBAAAA,EAAAA,GAAAA;AAEAC,QAAAA,YAAY,CAACC,GAAG,CAAHA,MAAAA,CAAbD,GAAY,CAAZA,GAA+BC,GAAG,CAAHA,MAAAA,CAA/BD,KAAAA;AACA,YAAIE,UAAU,GAAGC,MAAM,CAANA,MAAAA,CAAAA,YAAAA,EAAAA,IAAAA,CAAjB,QAAiBA,CAAjB;AACA,YAAIC,KAAK,GAAGN,QAAQ,CAARA,aAAAA,CAAZ,eAAYA,CAAZ;AACAM,QAAAA,KAAK,CAALA,aAAAA,CAAAA,UAAAA,EAAAA,SAAAA,GAAAA,UAAAA;AAEA,YAAIC,cAAc,GAAGJ,GAAG,CAAHA,MAAAA,CAArB,OAAA;AACA,YAAIK,MAAM,GAAV,EAAA;;AACA,YAAID,cAAc,CAAdA,OAAAA,CAAJ,MAAA,EAAmC;AAC/B,cAAG;AACCC,YAAAA,MAAM,GAAGC,IAAI,CAAJA,KAAAA,CAAWF,cAAc,CAAdA,OAAAA,CAApBC,MAASC,CAATD;AADJ,WAAA,CAEE,OAAA,GAAA,EAAY;AACVP,YAAAA,OAAO,CAAPA,GAAAA,CAAAA,QAAAA,EAAAA,GAAAA;AACAO,YAAAA,MAAM,GAANA,EAAAA;AACH;AACJ;;AACDA,QAAAA,MAAM,CAACL,GAAG,CAAHA,MAAAA,CAAPK,GAAM,CAANA,GAAyBL,GAAG,CAAHA,MAAAA,CAAzBK,KAAAA;AACAD,QAAAA,cAAc,CAAdA,OAAAA,CAAAA,MAAAA,GAAgCE,IAAI,CAAJA,SAAAA,CAAhCF,MAAgCE,CAAhCF;AAnBJP,OAAAA;AAsBH","sourcesContent":["class ErrorHandler {\r\n    errors = {}\r\n    \r\n    constructor() {\r\n        this.setup()\r\n    }\r\n\r\n    setup(){\r\n        document.addEventListener(`validation-error`, (evt) => {\r\n            console.log(`invalid input data`, evt)\r\n    \r\n            globalErrors[evt.detail.key] = evt.detail.value\r\n            var errMessage = Object.values(gloablErrors).join(`<br />`)\r\n            var errEl = document.querySelector(`.global-error`)\r\n            errEl.querySelector(`.message`).innerHTML = errMessage\r\n\r\n            var invalidElement = evt.detail.element\r\n            var errors = {}\r\n            if (invalidElement.dataset.errors) {\r\n                try{\r\n                    errors = json.parse(invalidElement.dataset.errors)\r\n                } catch (err) {\r\n                    console.log(`error!`, err)\r\n                    errors = {}\r\n                }\r\n            }\r\n            errors[evt.detail.key] = evt.detail.value\r\n            invalidElement.dataset.errors = json.stringify(errors)\r\n        })\r\n\r\n    }\r\n\r\n}"],"file":"error.js"}